name: Wait for AWS Amplify Deployment
description: Waits for an AWS Amplify Deployment to be successful

branding:
  icon: box
  color: blue

inputs:
  aws-access-key-id:
    description: AWS Access Key ID
    required: true
  aws-secret-access-key:
    description: AWS Secret Access Key
    required: true
  aws-region:
    description: AWS Region
    required: true
  amplify-app-id:
    description: AWS Amplify Application ID
    required: true
  branch-name:
    description: AWS Amplify Application Branch Name
    required: true
  commit-id:
    description: Commit Hash that triggered the deployment
    required: true
  max-attempts:
    description: Maximum number of attempts
    required: false
    default: '15'
  retry-wait-seconds:
    description: Waiting time between each retry (in seconds)
    required: false
    default: '60'
  timeout-seconds:
    description: Attempt timeout (in seconds)
    required: false
    default: '10'

runs:
  using: "composite"
  steps:
    - name: Install AWS CLI
      uses: unfor19/install-aws-cli-action@27d6061dae5d39e89be4d2246824f15e111a7e06
      with:
        version: 2

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ inputs.aws-access-key-id }}
        aws-secret-access-key: ${{ inputs.aws-secret-access-key }}
        aws-region: ${{ inputs.aws-region }}

    - name: Wait for Amplify Deployment
      id: amplify-deploy
      uses: nick-fields/retry@3f757583fb1b1f940bc8ef4bf4734c8dc02a5847
      with:
        max_attempts: ${{ inputs.max-attempts }}
        retry_wait_seconds: ${{ inputs.retry-wait-seconds }}
        timeout_seconds: ${{ inputs.timeout-seconds }}
        retry_on_exit_code: 99
        shell: bash
        command: |
          AWS_AMPLIFY_DEPLOYMENT_STATUS=$(aws amplify list-jobs --region ${{ inputs.aws-region }} --app-id ${{ inputs.amplify-app-id }} --branch-name ${{ inputs.branch-name }} | jq -r ".jobSummaries[] | select(.commitId == \"${{ inputs.commit-id }}\") | .status")
          [ "${AWS_AMPLIFY_DEPLOYMENT_STATUS}" = "FAILED" ] || [ "${AWS_AMPLIFY_DEPLOYMENT_STATUS}" = "CANCELLED" ] && exit 1
          [ "${AWS_AMPLIFY_DEPLOYMENT_STATUS}" != "SUCCEED" ] && exit 99
          echo "AWS_AMPLIFY_DEPLOYMENT_STATUS='${AWS_AMPLIFY_DEPLOYMENT_STATUS}'" >> $GITHUB_ENV

